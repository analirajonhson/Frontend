{"ast":null,"code":"import { EMPTY } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-toastr\";\nexport class ReceitasService {\n  constructor(http, toastr) {\n    this.http = http;\n    this.toastr = toastr;\n    this.URL = 'http://localhost:3000/receitas';\n  }\n  buscarTodos() {\n    return this.http.get(this.URL).pipe(map(retorno => retorno), catchError(erro => this.exibirErro(erro)));\n  }\n  buscarPorId(id) {\n    return this.http.get(`${this.URL}/${id}`).pipe(map(retorno => retorno), catchError(erro => this.exibirErro(erro)));\n  }\n  cadastrar(receita) {\n    return this.http.post(this.URL, receita).pipe(map(retorno => retorno), catchError(erro => this.exibirErro(erro)));\n  }\n  exibirErro(e) {\n    this.exibirMensagem(\"Erro!!!\", 'Não foi possivel realizar a operação', 'toast-error');\n    return EMPTY;\n  }\n  exibirMensagem(titulo, mensagem, tipo) {\n    this.toastr.show(mensagem, titulo, {\n      closeButton: true,\n      progressBar: true\n    }, tipo);\n  }\n}\nReceitasService.ɵfac = function ReceitasService_Factory(t) {\n  return new (t || ReceitasService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ToastrService));\n};\nReceitasService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ReceitasService,\n  factory: ReceitasService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["EMPTY","catchError","map","ReceitasService","constructor","http","toastr","URL","buscarTodos","get","pipe","retorno","erro","exibirErro","buscarPorId","id","cadastrar","receita","post","e","exibirMensagem","titulo","mensagem","tipo","show","closeButton","progressBar","i0","ɵɵinject","i1","HttpClient","i2","ToastrService","factory","ɵfac","providedIn"],"sources":["D:\\2DS\\frontendpwii\\Frontend\\src\\app\\services\\receitas.service.ts"],"sourcesContent":["import { IReceita } from './../model/IReceita.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { EMPTY, Observable } from 'rxjs';\r\nimport {catchError, map} from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ReceitasService {\r\n  private URL: string = 'http://localhost:3000/receitas';\r\n\r\n  constructor(private http: HttpClient, private toastr: ToastrService) {}\r\n\r\n  buscarTodos(): Observable<IReceita[]>{\r\n    return this.http.get<IReceita[]>(this.URL).pipe(\r\n      map(retorno => retorno),\r\n      catchError(erro => this.exibirErro(erro)));\r\n\r\n  }\r\n\r\n  buscarPorId(id: number): Observable<IReceita>{\r\n    return this.http.get<IReceita>(`${this.URL}/${id}`).pipe(\r\n      map(retorno => retorno),\r\n      catchError(erro => this.exibirErro(erro)));\r\n\r\n  }\r\n\r\n  cadastrar(receita: IReceita): Observable<IReceita>{\r\n    return this.http.post<IReceita>(this.URL, receita).pipe(\r\n      map(retorno => retorno),\r\n      catchError(erro => this.exibirErro(erro)));\r\n\r\n  }\r\n\r\n  exibirErro(e: any):Observable<any> {\r\n    this.exibirMensagem(\"Erro!!!\", 'Não foi possivel realizar a operação', 'toast-error');\r\n    return EMPTY;\r\n\r\n  }\r\n  exibirMensagem(titulo:string, mensagem: string, tipo: string):void{\r\n    this.toastr.show(mensagem, titulo,{closeButton:true, progressBar:true}, tipo);\r\n  }\r\n}\r\n"],"mappings":"AAGA,SAASA,KAAK,QAAoB,MAAM;AACxC,SAAQC,UAAU,EAAEC,GAAG,QAAO,gBAAgB;;;;AAM9C,OAAM,MAAOC,eAAe;EAG1BC,YAAoBC,IAAgB,EAAUC,MAAqB;IAA/C,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAF5C,KAAAC,GAAG,GAAW,gCAAgC;EAEgB;EAEtEC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAa,IAAI,CAACF,GAAG,CAAC,CAACG,IAAI,CAC7CR,GAAG,CAACS,OAAO,IAAIA,OAAO,CAAC,EACvBV,UAAU,CAACW,IAAI,IAAI,IAAI,CAACC,UAAU,CAACD,IAAI,CAAC,CAAC,CAAC;EAE9C;EAEAE,WAAWA,CAACC,EAAU;IACpB,OAAO,IAAI,CAACV,IAAI,CAACI,GAAG,CAAW,GAAG,IAAI,CAACF,GAAG,IAAIQ,EAAE,EAAE,CAAC,CAACL,IAAI,CACtDR,GAAG,CAACS,OAAO,IAAIA,OAAO,CAAC,EACvBV,UAAU,CAACW,IAAI,IAAI,IAAI,CAACC,UAAU,CAACD,IAAI,CAAC,CAAC,CAAC;EAE9C;EAEAI,SAASA,CAACC,OAAiB;IACzB,OAAO,IAAI,CAACZ,IAAI,CAACa,IAAI,CAAW,IAAI,CAACX,GAAG,EAAEU,OAAO,CAAC,CAACP,IAAI,CACrDR,GAAG,CAACS,OAAO,IAAIA,OAAO,CAAC,EACvBV,UAAU,CAACW,IAAI,IAAI,IAAI,CAACC,UAAU,CAACD,IAAI,CAAC,CAAC,CAAC;EAE9C;EAEAC,UAAUA,CAACM,CAAM;IACf,IAAI,CAACC,cAAc,CAAC,SAAS,EAAE,sCAAsC,EAAE,aAAa,CAAC;IACrF,OAAOpB,KAAK;EAEd;EACAoB,cAAcA,CAACC,MAAa,EAAEC,QAAgB,EAAEC,IAAY;IAC1D,IAAI,CAACjB,MAAM,CAACkB,IAAI,CAACF,QAAQ,EAAED,MAAM,EAAC;MAACI,WAAW,EAAC,IAAI;MAAEC,WAAW,EAAC;IAAI,CAAC,EAAEH,IAAI,CAAC;EAC/E;;AAjCWpB,eAAe,C;mBAAfA,eAAe,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,aAAA;AAAA;AAAf7B,eAAe,C;SAAfA,eAAe;EAAA8B,OAAA,EAAf9B,eAAe,CAAA+B,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}